library(betareg)
library(ggplot2)
library(ggrepel)
# Ler csv
df <- read.csv("../Dados/GINI_Por_Estado.csv", sep = ";")
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicilios <-
as.numeric(sub(",", ".", df$Domicilios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
# Beta Regression
reg <- betareg(Domicilios ~ GINI, data = df)
summary(reg)
# Gráfico
ggplot(df, aes(GINI, Domicilios, label = Estado, color = Regiao)) +
geom_point(size = 2.5) +
geom_text_repel(color = "black") +
geom_line(aes(GINI, predict(reg)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)")
ggsave("../Graficos/Atividade3.jpg")
ggsave("../Graficos/Atividade3.jpg")
# Bibliotecas
library(ggplot2)
library(ggrepel)
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicilios <-
as.numeric(sub(",", ".", df$Domicílios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
View(df)
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicílios <-
as.numeric(sub(",", ".", df$Domicílios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
View(df)
# Beta Regression
reg <- betareg(Domicilios ~ GINI, data = df)
# Bibliotecas
library(betareg)
# Beta Regression
reg <- betareg(Domicilios ~ GINI, data = df)
# Beta Regression
reg <- betareg(Domicílios ~ GINI, data = df)
# Reg linear
reglm <- lm(Domicílios ~  GINI, data=df)
# Comparar resultados
sum(residuals(reg))^2
sum(residuals(reg2lm))^2
sum(residuals(reglm))^2
# Comparar resultados
sum(residuals(reg))^2 > sum(residuals(reglm))^2
# Comparar resultados
sum(residuals(reg))^2 < sum(residuals(reglm))^2
# Sumário
summary(reglm)
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text_repel(color = "black") +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Salvar gráfico
ggsave("../Graficos/Atividade3.png")
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(color = "black") +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black") +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.01) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Salvar gráfico
ggsave("../Graficos/Atividade3.png")
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_point(data=df[19,], shape = 17) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_point(data=df[19,], shape = 18) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_point(data=df[19,], shape = 18) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_point(data=df[19,], aes(GINI, predict(reglm)) shape = 18) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_point(data=df[19,], aes(GINI, predict(reglm)), shape = 18) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
'# Salvar gráfico
ggsave("../Graficos/Atividade3.png")
# Bibliotecas
library(betareg)
library(ggplot2)
library(ggrepel)
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicílios <-
as.numeric(sub(",", ".", df$Domicílios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
# Beta Regression
reg <- betareg(Domicílios ~ GINI, data = df)
# Reg linear
reglm <- lm(Domicílios ~  GINI, data=df)
# Comparar resultados
sum(residuals(reg))^2 < sum(residuals(reglm))^2
# Sumário
summary(reglm)
predict(reg)
0.01 * coef(reg[1])
0.01 * coef(reg)[1]
0.01 * coef(reg)[2]
df$Domicílios
2/ 100
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_text()
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_text() +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
geom_text(data=df[19,], color = "black",
nudge_y = -0.02) +
geom_text_repel() +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
# geom_text(data=df[19,], color = "black",
#           nudge_y = -0.02) +
geom_text_repel() +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)") +
theme(plot.title = element_text(hjust = 0.5))
# Bibliotecas
library(betareg)
library(ggplot2)
library(ggrepel)
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicílios <-
as.numeric(sub(",", ".", df$Domicílios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
# Reg log log
reglog <- lm(log(Domicílios) ~ log(GINI), data=df)
# Reg linear
reglm <- lm(Domicílios ~  GINI, data = df)
summary(reglog)
exp(coef())
exp(coef(reglog)[2])
predict(reglog)
residuals(reglog)
residuals(reglog)^2
# Reg log log
reglog <- lm(Domicílios ~ log(GINI), data=df)
residuals(reglog)
df$Domicílios
predict(reglog)
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
# geom_text(data=df[19,], color = "black",
#           nudge_y = -0.02) +
geom_text_repel() +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(
title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)"
) +
theme(plot.title = element_text(hjust = 0.5))
source('C:/Users/thiag/Desktop/Atividades_Cafe_Com_Dados/Scripts/Atividade3.R', encoding = 'UTF-8')
# Gráfico
ggplot(df, aes(GINI, Domicílios, label = Estado, color = Região)) +
geom_point(size = 2.5) +
# geom_text(data=df[19,], color = "black",
#           nudge_y = -0.02) +
geom_text_repel() +
geom_line(aes(GINI, predict(reglm)), color = "black") +
labs(
title = "Desigualdade nos estados e porcentagem de
domicílios com auxílio emergencial",
x = "Coeficiente de GINI",
y = "Domicílios com auxílio emergencial (%)"
) +
theme(plot.title = element_text(hjust = 0.5))
Bibliotecas
library(betareg)
library(ggplot2)
library(ggrepel)
# Ler csv
df <- read.csv("../Dados/Atividade3.csv", sep = ";")
# Resolver compatibilidade trocando "," com ;
df$Domicílios <-
as.numeric(sub(",", ".", df$Domicílios, fixed = TRUE))
df$GINI <- as.numeric(sub(",", ".", df$GINI, fixed = TRUE))
# Beta Regression
reg <- betareg(Domicílios ~ GINI, data = df)
# Reg linear
reglm <- lm(Domicílios ~  GINI, data = df)
# Comparar resultados
sum(residuals(reg)^ 2)  < sum(residuals(reglm)^ 2)
# Sumário
summary(reglm)
coef(reglm)[1] + 0.63 * coef(reglm)[2]
predict(reglm)
df[Estado == "Sergipe"]
View(df)
df[df$Estado == "Sergipe"]
df[,df$Estado == "Sergipe"]
df[,df$Estado == "Sergipe",]
df$Estado == "Sergipe"
df[df$Estado == "Sergipe"]
library(dplyr)
df %>% filter(Estado == Sergipe)
df %>% filter(Estado == "Sergipe")
coef(reglm)[1] + 0.63 * coef(reglm)[2]
df %>% filter(Estado == "Sergipe") %>% select(Domicílios)
View(df)
View(reglm)
df %>% filter(Estado == "Sergipe") %>% select(GINI)
coef(reglm)[1] + (df %>% filter(Estado == "Sergipe") %>% select(GINI))* coef(reglm)[2]
library(rio)
install_formats()
df <- import("../Dados/Atividade4.xls")
View(df)
rio::import()?
?rio
library(readxl)
df <- read_excel("../Dados/Atividade4.xls", sheet = "Junho")
View(df)
summary(df)
df <- import("../Dados/Atividade4.xls", sheet = "Junho")
View(df)
library(dplyr)
# Isolar Sergipe
df %>% filter(Estado = Sergipe)
# Isolar Sergipe
df %>% filter(Estado == Sergipe)
View(df)
# Isolar Sergipe
df %>% filter(UF == Sergipe)
# Isolar Sergipe
df %>% filter(UF == "Sergipe")
#
median(summary(df))
#
median(df)
#
summary(df)
df %>% summarise(median,mean)
df %>% summarise(c(median,mean))
df %>% summarise(Média = mean(), Mediana =  median())
# Bibliotecas
library(rio)
# Importar os dados e salvar numa variável
df <- import("../Dados/Atividade4.xls", sheet = "Junho")
# Sumário das colunas
summary(df)
# Isolar Sergipe
Sergipe <- df %>% filter(UF == "Sergipe")
library(dplyr)
# Isolar Sergipe
Sergipe <- df %>% filter(UF == "Sergipe")
library(betareg)
View(df)
#
modelo_linear <-  lm(Últimos 12 meses ~ Isolamento, data=df)
#
modelo_linear <-  lm("Últimos 12 meses" ~ Isolamento, data=df)
#
modelo_linear <-  lm(Últimos 12 meses ~ Isolamento, data=df)
#
modelo_linear <-  lm(df$`Últimos 12 meses` ~ Isolamento, data=df)
View(modelo_linear)
modelo_beta <- betareg(df$`Últimos 12 meses` ~ Isolamento, data=df)
plot(modelo_linear)
library(ggplot2)
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point()
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_line(aes(Isolamento, predict(modelo_linear)))
# Sumário do modelo
summary(modelo_linear)
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_line(aes(Isolamento, predict(modelo_linear), color="blue"))
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_line(aes(Isolamento, predict(modelo_linear)),color="blue")
# Bibliotecas
library(rio)
library(dplyr)
library(ggplot2)
# Importar os dados e salvar numa variável
df <- import("../Dados/Atividade4.xls", sheet = "Junho")
# Importar os dados e salvar numa variável
df <- import("../Dados/Atividade4.1.xls", sheet = "Junho")
# Sumário das colunas
summary(df)
# Isolar Sergipe
Sergipe <- df %>% filter(UF == "Sergipe")
# Modelo
modelo_linear <-  lm(df$`Últimos 12 meses` ~ Isolamento, data=df)
# Sumário do modelo
summary(modelo_linear)
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_line(aes(Isolamento, predict(modelo_linear)),color="blue")
library(ggrepel)
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_text_repel() +
geom_line(aes(Isolamento, predict(modelo_linear)))
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`)) +
geom_point() +
geom_text_repel() +
geom_line(aes(Isolamento, predict(modelo_linear)))
View(df)
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`), label=UF) +
geom_point() +
geom_text_repel() +
geom_line(aes(Isolamento, predict(modelo_linear)))
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`, label=UF)) +
geom_point() +
geom_text_repel() +
geom_line(aes(Isolamento, predict(modelo_linear)))
# Importar os dados e salvar numa variável
df <- import("../Dados/Atividade4.1.xls", sheet = "Junho")
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`, label=UF, color=Regiao)) +
geom_point() +
geom_text_repel() +
geom_line(aes(Isolamento, predict(modelo_linear)))
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`, label=UF, color=Regiao)) +
geom_point() +
geom_text_repel()
ggsave("../Graficos/Atividade4.1.png")
View(df)
# Colocar coluna em porcentagem
df <- df %>% transmute(`Últimos 12 Meses` = `Últimos 12 Meses` / 100)
# Colocar coluna em porcentagem
df <- df %>% transmute(`Últimos 12 Meses` =  ``Últimos 12 Meses` / 100`)
# Colocar coluna em porcentagem
df <- df %>% transmute(5 =  5 / 100`)
# Colocar coluna em porcentagem
df <- df %>% transmute(`Últimos 12 meses` / 100)
View(df)
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` = `Últimos 12 meses` / 100)
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` / 100)
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` = `Últimos 12 meses` / 100)
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` = (`Últimos 12 meses` / 100))
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` = `Últimos 12 meses` / 100)
# Importar os dados e salvar numa variável
df <- import("../Dados/Atividade4.1.xls", sheet = "Junho")
# Colocar coluna em porcentagem
df <- df %>% mutate(`Últimos 12 meses` = `Últimos 12 meses` / 100)
View(df)
# Gráfico
ggplot(df, aes(Isolamento, `Últimos 12 meses`, label=UF, color=Regiao)) +
geom_point() +
geom_text_repel()
ggsave("../Graficos/Atividade4.1.png")
